services:
  app:
    build:
      dockerfile: ./Dockerfile
      context: ./
    environment:
      APP_CONFIG__DB__NAME: ${APP_CONFIG__DB__NAME}
      APP_CONFIG__DB__PASSWORD: ${APP_CONFIG__DB__PASSWORD}
      APP_CONFIG__DB__USER: ${APP_CONFIG__DB__USER}
      APP_CONFIG__DB__HOST: pg
      APP_CONFIG__DB__PORT: ${APP_CONFIG__DB__PORT}
      APP_CONFIG__DB__DRIVER: ${APP_CONFIG__DB__DRIVER}

      APP_CONFIG__DB__ECHO: ${APP_CONFIG__DB__ECHO}
      APP_CONFIG__DB__ECHO_POOL: ${APP_CONFIG__DB__ECHO_POOL}
      APP_CONFIG__DB__POOL_SIZE: ${APP_CONFIG__DB__POOL_SIZE}
      APP_CONFIG__DB__MAX_OVERFLOW: ${APP_CONFIG__DB__MAX_OVERFLOW}

      APP_CONFIG__REDIS__HOST: redis
      APP_CONFIG__REDIS__PORT: ${APP_CONFIG__REDIS__PORT}
    profiles: [ "default" ]
    depends_on:
      pg:
        condition: service_healthy
      redis:
        condition: service_healthy

  pg:
    image: postgres:16
    profiles: [ "default" ]
    container_name: pg_container
    environment:
      POSTGRES_DB: ${APP_CONFIG__DB__NAME}
      POSTGRES_USER: ${APP_CONFIG__DB__USER}
      POSTGRES_PASSWORD: ${APP_CONFIG__DB__PASSWORD}
    ports:
      - ${APP_CONFIG__DB__PORT}:5432
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 3s
      timeout: 3s
      retries: 3

  pg_test:
    image: postgres:16
    profiles: [ "test" ]
    container_name: pg_test_container
    environment:
      POSTGRES_DB: ${APP_CONFIG__DB_TEST__NAME}
      POSTGRES_USER: ${APP_CONFIG__DB_TEST__USER}
      POSTGRES_PASSWORD: ${APP_CONFIG__DB_TEST__PASSWORD}
    ports:
      - ${APP_CONFIG__DB_TEST__PORT}:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 3s
      timeout: 3s
      retries: 3

  redis:
    image: redis:latest
    profiles: [ "default" ]
    container_name: redis_container
    ports:
      - ${APP_CONFIG__REDIS__PORT}:6379
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 1s
      timeout: 3s
      retries: 5
    volumes:
      - redis_data:/bitnami/redis/data

volumes:
  pg_data:
  redis_data:
